(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{355:function(t,e,a){t.exports=a.p+"assets/img/setup.9490a016.png"},356:function(t,e,a){t.exports=a.p+"assets/img/automation-token.097bbd88.png"},370:function(t,e,a){"use strict";a.r(e);var s=a(41),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),s("p",[t._v("You can following the guide below, or watch this video.")]),t._v(" "),s("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/FPj7urChN_E",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""}}),t._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),s("p",[t._v("Running the following command will guide you to set it up interactively.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("npx shipjs setup\n")])])]),s("p",[t._v("This interactive CLI will help you install Ship.js into your package and create a tailored config file for your project.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(355),alt:"npx shipjs setup"}})]),t._v(" "),s("p",[t._v("Otherwise, you can still do it manually.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev shipjs\n\nor\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -D shipjs\n")])])]),s("p",[t._v("Add the following to the "),s("code",[t._v("scripts")]),t._v(" section in your "),s("code",[t._v("package.json")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v('"scripts'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"release"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shipjs prepare"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"github-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-token"}},[t._v("#")]),t._v(" GitHub Token")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("If you use Ship.js at work, I recommend you to get a token from a shared account, not from your personal account because after you quit, your token will still be used.")])]),t._v(" "),s("p",[t._v("GitHub token is used in both "),s("code",[t._v("shipjs prepare")]),t._v(" and "),s("code",[t._v("shipjs trigger")]),t._v(".")]),t._v(" "),s("ol",[s("li",[t._v("Go to "),s("a",{attrs:{href:"https://github.com/settings/tokens/new",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/settings/tokens/new"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v('Check "repo(Full control of private repositories)"')]),t._v(" "),s("li",[t._v("Generate/copy the token")])]),t._v(" "),s("p",[t._v("You can put it in the following two ways:")]),t._v(" "),s("ul",[s("li",[t._v("Prepend it in your command like: "),s("code",[t._v("GITHUB_TOKEN=xxx shipjs prepare")])]),t._v(" "),s("li",[t._v('Create a file named ".env" and put the following content: '),s("code",[t._v("GITHUB_TOKEN=xxx")]),t._v(' (".env" should not be committed. Add it to ".gitignore".)')])]),t._v(" "),s("p",[t._v("If you automate flows in your CI, you can add the token to Environment Variable section in your CI service.")]),t._v(" "),s("h3",{attrs:{id:"dry-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dry-mode"}},[t._v("#")]),t._v(" Dry Mode")]),t._v(" "),s("p",[t._v("If you're not sure, you can always run commands in dry mode.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" run release --dry-run\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run release -- --dry-run\n")])])]),s("p",[t._v("It will show you which steps are going to be executed without actually executing them.")]),t._v(" "),s("h2",{attrs:{id:"on-your-local-machine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#on-your-local-machine"}},[t._v("#")]),t._v(" On your local machine")]),t._v(" "),s("ul",[s("li",[t._v("Part 1: "),s("code",[t._v("yarn run release")]),t._v(" will create a pull request.")]),t._v(" "),s("li",[t._v("Part 2: Review and merge the PR.")]),t._v(" "),s("li",[t._v("Part 3: "),s("code",[t._v("git pull")]),t._v(" and "),s("code",[t._v("yarn shipjs trigger")]),t._v("(or "),s("code",[t._v("npx shipjs trigger")]),t._v(") to actually publish it to NPM.")])]),t._v(" "),s("h2",{attrs:{id:"automate-part-3-trigger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#automate-part-3-trigger"}},[t._v("#")]),t._v(" Automate Part 3 ("),s("code",[t._v("trigger")]),t._v(")")]),t._v(" "),s("p",[t._v("This guide is based on CircleCI. It may be done similarly on other CI services.")]),t._v(" "),s("p",[t._v("If you are using GitHub Actions, you can jump to "),s("RouterLink",{attrs:{to:"/guide/getting-started.html#setup-github-actions"}},[t._v("Setup GitHub Actions")]),t._v(".")],1),t._v(" "),s("p",[t._v("A minimal "),s("code",[t._v(".circleci/config.yml")]),t._v(" looks like the following:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shipjs_trigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("docker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'circleci/node:latest'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" checkout\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yarn install\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Triggering Ship.js to Release\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n            git config --global user.email "you@example.com"\n            git config --global user.name "Your Name"\n            yarn shipjs trigger')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflows")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("release_if_needed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shipjs_trigger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or whatever branch you'd like (normally your base branch)")]),t._v("\n")])])]),s("p",[t._v("At Part 2, if you merge the PR, a new commit will be added and CircleCI will run "),s("code",[t._v("yarn shipjs trigger")]),t._v("(or "),s("code",[t._v("npx shipjs trigger")]),t._v("). Then, it will check if the latest commit message is in convention and the current branch is right. If the conditions are met, it will trigger a release. Otherwise, it will skip.")]),t._v(" "),s("p",[t._v('When merging a PR, you need to "Squash and merge" into a single commit.')]),t._v(" "),s("p",[t._v('You can go to "Settings" menu of your repository, and even force "Squash and merge" behavior under "Merge button" section.')]),t._v(" "),s("p",[t._v("To learn more, you can read "),s("a",{attrs:{href:"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits",target:"_blank",rel:"noopener noreferrer"}},[t._v("this"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"npm-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-token"}},[t._v("#")]),t._v(" NPM Token")]),t._v(" "),s("p",[t._v("Setup an NPM token to allow Ship.js("),s("strong",[t._v("at CircleCI")]),t._v(") to release the package to NPM.")]),t._v(" "),s("ol",[s("li",[t._v("Login at "),s("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.npmjs.com/"),s("OutboundLink")],1),t._v(', click your profile icon and go to "Tokens".')]),t._v(" "),s("li",[t._v('Click "Create New Token", make sure the access level is "Read and Publish" and copy the token.')]),t._v(" "),s("li",[t._v('At CircleCI, go to "Project Settings" → "BUILD SETTINGS" → "Environment Variables".')]),t._v(" "),s("li",[t._v('Click "Add Variable".\n'),s("ul",[s("li",[t._v("Name: "),s("code",[t._v("NPM_AUTH_TOKEN")])]),t._v(" "),s("li",[t._v("Value: Paste the token from clipboard.")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING for 2FA")]),t._v(" "),s("p",[t._v("If you have enabled 2FA for both authorization and publishing, when "),s("code",[t._v("shipjs trigger")]),t._v(" runs, it will be prompted for one-time password. You probably have configured CI service (CircleCI, GitHub Actions, etc) to run that command for you. It means "),s("code",[t._v("shipjs trigger")]),t._v(" will be stuck.")]),t._v(" "),s("p",[t._v("NPM has "),s("a",{attrs:{href:"https://github.blog/changelog/2020-10-02-npm-automation-tokens/",target:"_blank",rel:"noopener noreferrer"}},[t._v("released"),s("OutboundLink")],1),t._v(' a new feature "Automation token" to solve this.')]),t._v(" "),s("p",[s("img",{attrs:{src:a(356),alt:"NPM automatin token"}})])]),t._v(" "),s("h3",{attrs:{id:"github-token-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-token-2"}},[t._v("#")]),t._v(" GitHub Token")]),t._v(" "),s("p",[t._v("Setup a GitHub token to allow Ship.js("),s("strong",[t._v("at CircleCI")]),t._v(") to create a git tag and push it to remote after release.")]),t._v(" "),s("ol",[s("li",[t._v("Go to https://github.com/settings/tokens/new")]),t._v(" "),s("li",[t._v('Check "repo(Full control of private repositories)"')]),t._v(" "),s("li",[t._v("Generate/copy the token")]),t._v(" "),s("li",[t._v('At CircleCI, go to "Project Settings" → "BUILD SETTINGS" → "Environment Variables".')]),t._v(" "),s("li",[t._v('Click "Add Variable".\n'),s("ul",[s("li",[t._v("Name: "),s("code",[t._v("GITHUB_TOKEN")])]),t._v(" "),s("li",[t._v("Value: Paste the token from clipboard.")])])])]),t._v(" "),s("h2",{attrs:{id:"setup-github-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-github-actions"}},[t._v("#")]),t._v(" Setup GitHub Actions")]),t._v(" "),s("p",[t._v("If you are using GitHub Actions, you need to setup the NPM token to release package to NPM:")]),t._v(" "),s("ol",[s("li",[t._v("Login at "),s("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.npmjs.com/"),s("OutboundLink")],1),t._v(', click your profile icon and go to "Auth Tokens".')]),t._v(" "),s("li",[t._v('Click "Create New Token", make sure the access level is "Read and Publish" and copy the token.')]),t._v(" "),s("li",[t._v('At your GitHub repo, go to "Settings" → "Secrets".')]),t._v(" "),s("li",[t._v('Click "Add a new secret".\n'),s("ul",[s("li",[t._v("Name: "),s("code",[t._v("NPM_AUTH_TOKEN")])]),t._v(" "),s("li",[t._v("Value: Paste the token from clipboard.")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);